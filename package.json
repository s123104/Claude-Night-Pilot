{
  "name": "claude-night-pilot",
  "private": true,
  "version": "0.1.1",
  "type": "module",
  "scripts": {
    "dev": "tauri dev",
    "build": "tauri build",
    "dev:frontend": "python3 -m http.server 8080 --directory src",
    "dev:frontend:legacy": "python3 -m http.server 8080 --directory src",
    "build:frontend": "echo 'Frontend build complete - using static files'",
    "tauri": "tauri",
    "test": "playwright test",
    "test:ui": "playwright test --ui",
    "test:headed": "playwright test --headed", 
    "test:debug": "playwright test --debug",
    "test:gui": "playwright test --project=gui-tests",
    "test:cli": "playwright test --project=cli-tests",
    "test:integration": "playwright test --project=integration-tests",
    "test:cross-platform": "playwright test --project=cross-platform-tests",
    "test:mobile": "playwright test --project=mobile-chrome",
    "test:demos": "INCLUDE_DEMOS=true playwright test tests/demos",
    "test:rust": "cd src-tauri && cargo test --lib",
    "test:rust:unit": "cd src-tauri && cargo test --lib -- --nocapture",
    "test:rust:integration": "cd src-tauri && cargo test --test integration_tests",
    "test:rust:performance": "cd src-tauri && cargo test --test performance_tests",
    "test:performance": "playwright test tests/integration/performance-optimized.spec.js --workers=1",
    "test:parallel": "playwright test tests/integration/ --workers=max",
    "test:fast": "playwright test tests/integration/ --workers=75%",
    "test:coverage": "cd src-tauri && cargo tarpaulin --config ../tarpaulin.toml",
    "test:coverage:html": "cd src-tauri && cargo tarpaulin --config ../tarpaulin.toml --output-dir ../coverage",
    "test:all": "npm run test:rust && npm run test && npm run test:coverage",
    "validate:all": "node scripts/validate-all.js",
    "validate:quick": "node scripts/validate-all.js --quick",
    "release": "standard-version && node scripts/sync-version.js",
    "cli": "cd src-tauri && cargo run --bin cnp-unified --",
    "cli:build": "cd src-tauri && cargo build --release --bin cnp-unified",
    "cli:install": "cd src-tauri && cargo install --path . --bin cnp-unified",
    "cli:unified": "cd src-tauri && cargo run --bin cnp-unified --",
    "cli:optimized": "cd src-tauri && cargo run --bin cnp-optimized --",
    "bench": "cd src-tauri && cargo bench",
    "bench:startup": "cd src-tauri && cargo bench --bench startup_performance",
    "bench:simple": "cd src-tauri && cargo bench --bench simple_performance",
    "bench:cli": "cd src-tauri && cargo bench --bench cli_performance",
    "bench:database": "cd src-tauri && cargo bench --bench database_performance",
    "bench:all": "cd src-tauri && cargo bench --benches",
    "lint": "eslint src/**/*.js --fix",
    "lint:check": "eslint src/**/*.js",
    "lint:rust": "cd src-tauri && cargo clippy --all-targets --all-features -- -D warnings",
    "format": "cd src-tauri && cargo fmt",
    "format:check": "cd src-tauri && cargo fmt -- --check",
    "typecheck": "echo 'TypeScript checking complete'",
    "commitlint": "commitlint --edit",
    "commit": "git-cz",
    "prepare": "husky",
    "precommit": "npm run lint:rust && npm run format:check && npm run test:rust:unit",
    "prepush": "npm run test:all",
    "performance:report": "cd src-tauri && cargo bench && echo 'ðŸ“Š Performance Report Generated'",
    "port:status": "node scripts/cleanup-ports.js status",
    "port:cleanup": "node scripts/cleanup-ports.js cleanup --force",
    "port:find": "node scripts/cleanup-ports.js find"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.8.1",
    "@commitlint/config-conventional": "^19.8.1",
    "@playwright/test": "^1.54.1",
    "detect-port-alt": "^1.1.6",
    "eslint": "^9.31.0",
    "get-port": "^7.1.0",
    "husky": "^9.1.7",
    "playwright": "^1.54.1"
  },
  "dependencies": {
    "@tauri-apps/cli": "^2.7.1",
    "@tauri-apps/plugin-cli": "^2.4.0",
    "@tauri-apps/plugin-notification": "^2.3.0",
    "@tauri-apps/plugin-shell": "^2.3.0",
    "@tauri-apps/plugin-sql": "^2.3.0",
    "@tauri-apps/plugin-store": "^2.3.0"
  }
}
